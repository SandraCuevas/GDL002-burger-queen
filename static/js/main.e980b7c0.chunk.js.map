{"version":3,"sources":["components/navbar.js","components/home.js","firebase/fbStart.js","components/order.js","components/menu.js","components/menuBrunch.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","react_router_dom","to","exact","Home","title","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Order","_React$Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","deleteItem","e","i","handleDelete","inherits","createClass","key","value","_this2","console","log","menuList","map","menu","item","price","id","onClick","event","class","React","Component","ShowMenuFb","state","orders","total","submit","bind","assertThisInitialized","deleteRow","sumOrder","database","ref","on","snapshot","menu1","val","newStateMenu","menu2","push","type","setState","order","toConsumableArray","preventDefault","prevState","filter","element","items","el","reduce","sum","result","_this3","menuDetail","name","components_order","kitchen","App","navbar","react_router","path","render","home","component","Menu","MenuBrunch","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e980b7c0.chunk.js","sourcesContent":["import React from 'react';\nimport {NavLink} from 'react-router-dom';\n\n\nconst Navbar = (props) => (\n    <nav>\n        <h2 className=\"logo\">THE TEA SHOP</h2>\n        <ul className=\"nav-menu\">\n          <li><NavLink className=\"nav-menu__link\" to=\"/menu\">MENU LUNCH</NavLink></li>\n          <li><NavLink className=\"nav-menu__link\" to=\"/menuBrunch\">MENU BRUNCH</NavLink></li>\n          <li><NavLink className=\"nav-menu__link\" to=\"/kitchen\">KITCHEN</NavLink></li>\n          <li><NavLink className=\"nav-menu__link\" exact to=\"/\" >LOGOUT</NavLink></li>\n        </ul>\n      </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\n\n\nconst Home =(props) => (\n    <div className=\"main-content\">\n        \n        <div className=\"container\">\n            <h2>{props.title}</h2>\n            <div className = \"home-image\"></div>\n            <div className = \"thumbnail-container\">\n                <div className = \"home-thumbnail-1\"></div>\n                <div className = \"home-thumbnail-2\"></div>\n                <div className = \"home-thumbnail-3\"></div>\n            </div>\n        </div>\n    </div>\n\n);\n\nexport default Home;","\nimport * as firebase from 'firebase'\n\n\n  // Your web app's Firebase configuration\n  var firebaseConfig = {\n    apiKey: \"AIzaSyB-L0CiAYlEqtpoaBGlL7BIiYfBLaR77mE\",\n    authDomain: \"burguerqueen-e1cb6.firebaseapp.com\",\n    databaseURL: \"https://burguerqueen-e1cb6.firebaseio.com\",\n    projectId: \"burguerqueen-e1cb6\",\n    storageBucket: \"burguerqueen-e1cb6.appspot.com\",\n    messagingSenderId: \"350756645895\",\n    appId: \"1:350756645895:web:ece26b659d27658f\"\n  };\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n\n\nexport default firebase;","import React from \"react\";\n\n// Stateful o Smart Component\n// los que son arrow function son Stateless o Dumb Components\nexport class Order extends React.Component {\n    deleteItem = (e, i) => {\n        this.props.handleDelete(e, i)\n    }\n   \n  render(){\n    console.log(this.props.menuList)\n        const order = this.props.menuList.map((menu, i) => {\n            return(\n                <div>\n                    <ul key={i} className=\"list-group col-md-12\">\n                        <li className=\"list-group-item d-flex justify-content-between align-items-center col-md-12\">\n                            <p>{menu.item}</p>\n                            <span>{\"$\"+ menu.price}</span>\n                            <button id={i} onClick={(event)=> this.deleteItem(event, menu)}><i class=\"fas fa-trash-alt\"></i></button>\n                        </li>\n                    </ul>\n                </div>\n            )\n        })\n        return(\n            order\n        )\n    }\n}\n\nexport default Order;","import React, {Component} from 'react';\nimport firebase from '../firebase/fbStart';\nimport Order from './order';\n\nclass ShowMenuFb extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            menu:[],\n            orders:[],\n            total: 0,\n            //toKitchen:[]\n        };\n        this.submit = this.submit.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.sumOrder = this.sumOrder.bind(this)\n    };   \n\n    componentDidMount(){\n        const refMenu = firebase.database().ref('menu');\n        refMenu.on('value', (snapshot) =>{\n            let menu1= snapshot.val();\n            let newStateMenu = [];\n\n            for (let menu2 in menu1){\n                newStateMenu.push({\n                    item: menu1[menu2].item,\n                    price: menu1[menu2].price,\n                    type: menu1[menu2].type\n                });\n            }\n            this.setState({\n                menu: newStateMenu\n            });\n        });\n    }\n    submit(item, price){\n\n        const order = {\n        item: item,\n        price: price\n            }\n            this.setState({\n                orders:[...this.state.orders,order]\n\n            })\n    };\n    \n    deleteRow(e, menu) {\n        e.preventDefault(e)\n        this.setState(prevState => ({\n            orders: prevState.orders.filter(element => element !== menu )\n        }));\n    }\n\n    sumOrder () {\n        const priceArr = this.state.orders.map((el) => el.price)\n        const items = priceArr.reduce((sum,result)=>{\n            return sum + result;\n        });\n        this.setState({\n            total: items\n        });\n    };\n\n    /*addKitchen = id =>{\n        let tempOrder = [...this.state.orders];\n        const index = tempOrder.indexOf(this.state.orders(id));\n        const item = tempOrder[index];\n        item.inKitchen = true;\n        item.count = 1;\n        const price = item.price;\n        item.total = price;\n        this.setState(()=>{\n            return{orders:tempOrder,kitchen:[...this.state.kitchen, orders]}\n        },()=>(console.log(this.state)))\n\n    };*/\n\n\n     render(){\n        return(\n   \n            \n                <div className=\"container\">\n                    <h2>LUNCH</h2>\n                        <div className=\"row\"> \n                                <div className=\"col\">\n                                            <h3>OPTIONS</h3>\n                                            \n                                                {this.state.menu.map((menuDetail,i)=>\n                                                    <div key = {i} className=\"list-group list-group-flush col mt-4\" >\n                                                    \n                                                        <button className=\"list-group-item\" onClick={()=>{\n                                                            this.submit(menuDetail.item, menuDetail.price);\n                                                                } } type=\"submit\"> \n                                                            <li className=\"list-group-item d-flex justify-content-between align-items-center col-md-12\"> \n                                                            <p className=\"card-title\">{menuDetail.item}</p>\n                                                            <span className=\"card-text\">{'$'+ menuDetail.price}</span>\n                                                            </li>\n                                                        </button>\n                                                    </div>\n                                                    )\n                                                }\n                                </div>  \n                                <div className=\"col\">\n                                        <h3>ORDER</h3>\n                                        <form>\n                                        <label>\n                                            Client:\n                                            <input type=\"text\" name=\"name\" />\n                                            <input type=\"submit\" value=\"Submit\" />\n                                        </label>\n                                        <Order menuList={this.state.orders} handleDelete={this.deleteRow}/>\n                                        </form>\n                                        <button onClick={this.sumOrder}>TOTAL: $ {this.state.total}</button>\n                                    \n                                </div>  \n                    \n                        </div>\n                </div>          \n            \n        );\n    \n        }\n        \n    }\n\n    export default ShowMenuFb;\n\n    ","import React, {Component} from 'react';\nimport firebase from '../firebase/fbStart';\nimport Order from './order';\n\nclass ShowMenuFb extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            menu:[],\n            orders:[],\n            total: 0,\n            kitchen:[]\n        };\n        this.submit = this.submit.bind(this);\n        this.deleteRow = this.deleteRow.bind(this);\n        this.sumOrder = this.sumOrder.bind(this)\n    };   \n\n    componentDidMount(){\n        const refMenu = firebase.database().ref('menuTea');\n        refMenu.on('value', (snapshot) =>{\n            let menu1= snapshot.val();\n            let newStateMenu = [];\n\n            for (let menu2 in menu1){\n                newStateMenu.push({\n                    item: menu1[menu2].item,\n                    price: menu1[menu2].price,\n                    type: menu1[menu2].type\n                });\n            }\n            this.setState({\n                menu: newStateMenu\n            });\n        });\n    }\n    submit(item, price){\n\n        const order = {\n        item: item,\n        price: price\n            }\n            this.setState({\n                orders:[...this.state.orders,order]\n\n            })\n        };\n    \n        deleteRow(e, menu) {\n            e.preventDefault(e)\n            this.setState(prevState => ({\n                orders: prevState.orders.filter(element => element !== menu )\n            }));\n          }\n\n    sumOrder () {\n        const priceArr = this.state.orders.map((el) => el.price)\n        const items = priceArr.reduce((sum,result)=>{\n            return sum + result;\n        });\n        this.setState({\n            total: items\n        });\n    };\n\n    /*addKitchen = id =>{\n        let tempOrder = [...this.state.orders];\n        const index = tempOrder.indexOf(this.state.orders(id));\n        const item = tempOrder[index];\n        item.inKitchen = true;\n        item.count = 1;\n        const price = item.price;\n        item.total = price;\n        this.setState(()=>{\n            return{orders:tempOrder,kitchen:[...this.state.kitchen, orders]}\n        },()=>(console.log(this.state)))\n\n    };*/\n\n\n     render(){\n        return(\n\n                <div className=\"container\">\n                    <h2>BRUNCH</h2>\n                        <div className=\"row\"> \n                                <div className=\"col\">\n                                            <h3>OPTIONS</h3>\n                                            \n                                                {this.state.menu.map((menuDetail,i)=>\n                                                    <div key = {i} className=\"list-group list-group-flush col mt-4\" >\n                                                    \n                                                        <button className=\"list-group-item\" onClick={()=>{\n                                                            this.submit(menuDetail.item, menuDetail.price);\n                                                                } } type=\"submit\"> \n                                                            <li className=\"list-group-item d-flex justify-content-between align-items-center col-md-12\"> \n                                                            <p className=\"card-title\">{menuDetail.item}</p>\n                                                            <span className=\"card-text\">{'$'+ menuDetail.price}</span>\n                                                            </li>\n                                                        </button>\n                                                    </div>\n                                                    )\n                                                }\n                                </div>  \n                                <div className=\"col\">\n                                        <h3>ORDER</h3>\n                                        <form>\n                                        <label>\n                                            Client:\n                                            <input type=\"text\" name=\"name\" />\n                                            <input type=\"submit\" value=\"Submit\" />\n                                        </label>\n                                        <Order menuList={this.state.orders} handleDelete={this.deleteRow}/>\n                                        </form>\n                                        <button onClick={this.sumOrder}>TOTAL: $ {this.state.total}</button>\n                                    \n                                </div>  \n                    \n                        </div>\n                </div>          \n            \n        );\n    \n        }\n        \n    }\n\n    export default ShowMenuFb;\n\n    ","import React from 'react';\nimport {BrowserRouter,Route} from 'react-router-dom';\nimport './css/style.css'\n//import './App.css';\nimport Navbar from './components/navbar';\nimport Home from './components/home';\nimport Menu from './components/menu';\nimport MenuBrunch from './components/menuBrunch';\n//import Kitchen from './components/kitchen';\n\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n        <Navbar title=\"The tea shop\"/>\n        <Route exact path =\"/\" render={()=><Home title=\"Suggestions\"/>} />\n        <Route path =\"/menu\" component={Menu} />\n        <Route path =\"/menuBrunch\" component={MenuBrunch} />\n        {/*<Route path =\"/kitchen\" component={Kitchen} />*/}\n        \n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}